zeus app init sample
>> Zeusfile
	{
		"name": "sample"
	}

zeus service add frontend
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {}
		}
	}

zeus service add database
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {}
			"database": {}
		}
	}

zeus config add frontend SqlServer '{{database.connectionString}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}"
				}
			}
			"database": {}
		}
	}

zeus service add storage
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}"
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus config add frontend BlobStorage '{{storage.connectionString}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}"
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus config add frontend EnvironmentName '{{env.name}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}"
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus config add frontend SomeExternalService
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": { required: true; }
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus config add frontend --optional SomeExternalService
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": null
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus config add frontend --optional CacheService "{ url: {{cacheService.endpoint}}, key: {{cacheService.key}} }"
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService"
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": null,
					"CacheService?": { url: {{cacheService.endpoint}}, key: {{cacheService.key}} }
				}
			}
			"database": {},
			"storage": {}
		}
	}

zeus env init qa
>> qa.zeusspec
	{
		"app": "sample",
		"name": "qa",
		"services": {
			"frontend": {
				"name": "sample-qa"
			}
		},
		"config" : {
			"azure" : {
				"subscription" : "My Azure Subscription"
			}
		}
	}

zeus env provision qa.zeusspec
>> Creates Azure resources

zeus repo add https://sample.example.com/myfeed
>> Registers https://sample.example.com/myfeed as a repo in the Zeusfile

zeus repo list Sample
>> Lists available Sample packages:
* Sample.Frontend@1.2.3 - [Desc]
* Sample.Frontend@1.1.0 - [Desc]
* ...

zeus env deploy qa.zeusspec frontend Sample@1.2.3
>> Deploys Sample.Frontend v1.2.3 package from the main repo to the frontend