Global Options:
	--verbose,-v
	--json
	--zeusfile,-z Specific Zeusfile to use

zeus app init sample
>> Zeusfile
	{
		"name": "sample"
	}

zeus service add frontend Azure.CloudService
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {"type": "Azure.CloudService"}
		}
	}

zeus service add database Azure.SqlServer
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {"type": "Azure.CloudService"}
			"database": {"type": "Azure.SqlServer"}
		}
	}

zeus config add frontend SqlServer '{{database.connectionString}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}"
				}
			}
			"database": {"type": "Azure.SqlServer"}
		}
	}

zeus service add storage Azure.StorageAccount
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}"
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus config add frontend BlobStorage '{{storage.connectionString}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}"
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus config add frontend EnvironmentName '{{env.name}}'
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}"
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus config add frontend SomeExternalService
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": null
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus config add frontend --optional SomeExternalService
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService",
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": { required: false }
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus config add frontend CacheService "{ url: {{cacheService.endpoint}}, key: {{cacheService.key}} }"
>> Zeusfile
	{
		"name": "sample"
		"services": {
			"frontend": {
				"type": "Azure.CloudService"
				"config": {
					"SqlServer": "{{database.connectionString}}",
					"BlobStorage": "{{storage.connectionString}}",
					"EnvironmentName": "{{env.name}}",
					"SomeExternalService": null,
					"CacheService": "{ url: {{cacheService.endpoint}}, key: {{cacheService.key}} }"
				}
			}
			"database": {"type": "Azure.SqlServer"},
			"storage": {"type": "Azure.StorageAccount"}
		}
	}

zeus env init qa
>> qa.zeusspec
	{
		"app": "sample",
		"name": "qa",
		"services": {
			"frontend": {
				"name": "sample-qa"
			}
		},
		"config" : {
			"azure" : {
				"subscription" : "My Azure Subscription"
			}
		}
	}

zeus env provision qa.zeusspec
>> Creates Azure resources

zeus repo add https://sample.example.com/myfeed
>> Registers https://sample.example.com/myfeed as a repo in the Zeusfile

zeus repo list Sample
>> Lists available Sample packages:
* Sample.Frontend@1.2.3 - [Desc]
* Sample.Frontend@1.1.0 - [Desc]
* ...

zeus env deploy qa.zeusspec frontend Sample@1.2.3
>> Deploys Sample.Frontend v1.2.3 package from the main repo to the frontend

zeus env deploy qa.zeusspec Sample@1.2.3
>> Deploys Sample.[ServiceName] v1.2.3 packages from the main repo to the various services.
>> Unless a "Sample" package is available, in which case, it should have dependencies on the other packages and scripts to deploy them.