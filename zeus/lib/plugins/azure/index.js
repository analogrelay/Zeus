// Generated by CoffeeScript 1.4.0
(function() {
  var AzurePlugin, Plugin, scripty, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore');

  scripty = require('azure-scripty');

  Plugin = require('../../plugin');

  module.exports = AzurePlugin = (function(_super) {

    __extends(AzurePlugin, _super);

    function AzurePlugin(context, ui) {
      AzurePlugin.__super__.constructor.call(this, context, ui);
      this.ui.log.verbose('loading azure plugin');
    }

    AzurePlugin.prototype.collectGlobalConfiguration = function(callback) {
      return scripty.invoke('account list', function(err, subscriptions) {
        var s;
        if (err) {
          return callback(err);
        } else {
          this.ui.log.help("choose a subscription");
          return this.ui.cli.choose((function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = subscriptions.length; _i < _len; _i++) {
              s = subscriptions[_i];
              _results.push(s.Name);
            }
            return _results;
          })(), function(i) {
            return callback(null, {
              subscription: {
                name: subscriptions[i].Name,
                id: subscriptions[i].Id
              }
            });
          });
        }
      });
    };

    return AzurePlugin;

  })(Plugin);

}).call(this);
