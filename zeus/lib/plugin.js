// Generated by CoffeeScript 1.4.0
(function() {
  var Plugin;

  module.exports = Plugin = (function() {

    function Plugin(context, ui) {
      this.context = context;
      this.ui = ui;
      this.serviceTypes = {};
    }

    Plugin.prototype.collectGlobalConfiguration = function(callback) {};

    Plugin.prototype.createServiceInstance = function(zeusfile, environmentName, service, serviceName, type, callback) {
      if (this.serviceTypes.hasOwnProperty(type)) {
        return this.serviceTypes[type].createInstance(zeusfile, environmentName, service, serviceName, callback);
      } else {
        return callback(new Error("No handler for service type '" + type + "' registered."));
      }
    };

    Plugin.prototype.provision = function(zeusfile, env, type, service, instance, callback) {
      if (this.serviceTypes.hasOwnProperty(type)) {
        return this.serviceTypes[type].provision(zeusfile, env, service, instance, callback);
      } else {
        return callback(new Error("No handler for service type '" + type + "' registered."));
      }
    };

    return Plugin;

  })();

}).call(this);
